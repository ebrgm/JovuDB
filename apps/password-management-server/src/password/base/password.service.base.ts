/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Password as PrismaPassword } from "@prisma/client";

export class PasswordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PasswordCountArgs, "select">): Promise<number> {
    return this.prisma.password.count(args);
  }

  async passwords(
    args: Prisma.PasswordFindManyArgs
  ): Promise<PrismaPassword[]> {
    return this.prisma.password.findMany(args);
  }
  async password(
    args: Prisma.PasswordFindUniqueArgs
  ): Promise<PrismaPassword | null> {
    return this.prisma.password.findUnique(args);
  }
  async createPassword(
    args: Prisma.PasswordCreateArgs
  ): Promise<PrismaPassword> {
    return this.prisma.password.create(args);
  }
  async updatePassword(
    args: Prisma.PasswordUpdateArgs
  ): Promise<PrismaPassword> {
    return this.prisma.password.update(args);
  }
  async deletePassword(
    args: Prisma.PasswordDeleteArgs
  ): Promise<PrismaPassword> {
    return this.prisma.password.delete(args);
  }
}
